!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.Compass=e():t.Compass=e()}(window,(function(){return function(t){var e={};function i(o){if(e[o])return e[o].exports;var n=e[o]={i:o,l:!1,exports:{}};return t[o].call(n.exports,n,n.exports,i),n.l=!0,n.exports}return i.m=t,i.c=e,i.d=function(t,e,o){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(i.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)i.d(o,n,function(e){return t[e]}.bind(null,n));return o},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=0)}([function(t,e,i){const o=i(1);t.exports=o},function(t,e){t.exports=class{constructor(){this.heading=0,this.deviceAngleDelta=0,this.position=null,this.geolocationID=null,this.permissionGranted=!1,this.debug=!1}init(t){if(!t)return this.start();this.callCallback(this.start(),t)}async start(){try{await this.watchPosition(),await this.confirmDialog("allow compass to access device orientation?")?await this.allowOrientationPermissions():alert("compass permissions were not granted")}catch(t){alert(t)}}confirmDialog(t){return new Promise((function(e,i){return window.confirm(t)?e(!0):i(!1)}))}async allowOrientationPermissions(){if("function"==typeof window.DeviceOrientationEvent.requestPermission){const t=await window.DeviceOrientationEvent.requestPermission();if(alert(t),"granted"==t)return window.addEventListener("deviceorientation",this.deviceOrientationHandler.bind(this),!0),!0;throw new Error("no device orientation permissions!")}window.DeviceOrientationEvent?window.addEventListener("deviceorientation",this.deviceOrientationHandler.bind(this),!0):alert("no device orientation support")}getHeading(t={lat:this.position.coords.latitude,lng:this.position.coords.longitude},e={lat:90,lng:this.position.coords.longitude}){return this.heading=360-this.getBearingToNorth(t,e),this.heading}getBearing(t,e){return this.calculateAngle(t.lat,t.lng,e.lat,e.lng)*(180/Math.PI)}getBearingToNorth(t={lat:this.position.coords.latitude,lng:this.position.coords.longitude},e={lat:90,lng:this.position.coords.longitude}){return this.getBearingToDestination(t,e)}getBearingToDestination(t={lat:this.position.coords.latitude,lng:this.position.coords.longitude},e){const i=this.getBearing(t,e);return this.deviceAngleDelta+i}deviceOrientationHandler(t){t.webkitCompassHeading?this.deviceAngleDelta=360-t.webkitCompassHeading:t.alpha?this.deviceAngleDelta=t.alpha:console.log("compass direction not found"),this.deviceAngleDelta=Math.round(this.deviceAngleDelta)}getPosition(){return new Promise((t,e)=>{navigator.geolocation.getCurrentPosition(i=>{i?t(i):e("no position found")})})}watchPosition(){return new Promise((t,e)=>{this.geolocationID=navigator.geolocation.watchPosition(i=>{i?(this.position=i,console.log(this.position.coords.latitude,this.position.coords.longitude),t(i)):e("no position found")})})}stopTracking(){navigator.geolocation.clearWatch(this.geolocationID),console.log("stopped tracking location")}calculateAngle(t,e,i,o){return Math.atan2(o-e,i-t)}callCallback(t,e){return e&&t.then(t=>(e(void 0,t),t)).catch(t=>(e(t),t)),t}}}])}));